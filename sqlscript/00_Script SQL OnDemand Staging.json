{
	"name": "00_Script SQL OnDemand Staging",
	"properties": {
		"folder": {
			"name": "Setup"
		},
		"content": {
			"query": "-- USE EXTERNAL TABLES\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_dlsasa_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_dlsasa_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://dlsasa.dfs.core.windows.net/raw', \n\t)\nGO\n\n--DROP SCHEMA stg\nGO\n\n--CREATE SCHEMA [stg]\nGO\n\n--DROP SCHEMA etl\nGO\n\n--CREATE SCHEMA [etl]\nGO\n\nIF EXISTS (SELECT * FROM sys.external_tables WHERE name = 'saleslines') DROP EXTERNAL TABLE [stg].[saleslines]\n\tCREATE EXTERNAL TABLE [stg].saleslines (\n\t\t[SaleLineId] bigint,\n\t\t[SaleId] int,\n\t\t[InvoiceLine] int,\n\t\t[ProductCode] varchar(10),\n\t\t[Quantity] numeric(18,4),\n\t\t[SalePrice] numeric(18,4),\n\t\t[PurchasePrice] numeric(18,4),\n\t\t[UnitMeasure] varchar(1),\n\t\t[LoadDate] datetime2(7),\n\t\t[TriggerDate] int\n\t\t)\n\t\tWITH (\n\t\tLOCATION = 'raw/SalesLines/*/*',\n\t\tDATA_SOURCE = [raw_dlsasa_dfs_core_windows_net],\n\t\tFILE_FORMAT = [SynapseParquetFormat]\n\t\t)\nGO\n\nIF EXISTS (SELECT * FROM sys.external_tables WHERE name = 'salesheader') DROP EXTERNAL TABLE [stg].[salesheader]\n\tCREATE EXTERNAL TABLE [stg].[salesheader] (\n\t\t[SaleId] int,\n\t\t[OldTicket] varchar(20),\n\t\t[InvoiceCode] varchar(20),\n\t\t[Date] date,\n\t\t[StoreCode] varchar(10),\n\t\t[CustomerId] int,\n\t\t[LoadDate] datetime2(7),\n\t\t[TriggerDate] int\n\t\t)\n\t\tWITH (\n\t\tLOCATION = 'raw/SalesHeader/*/*',\n\t\tDATA_SOURCE = [raw_dlsasa_dfs_core_windows_net],\n\t\tFILE_FORMAT = [SynapseParquetFormat]\n\t\t)\nGO\n\n\nIF EXISTS (SELECT * FROM sys.external_tables WHERE name = 'academiclevel') DROP EXTERNAL TABLE [stg].[academiclevel]\n\tCREATE EXTERNAL TABLE [stg].[academiclevel] (\n\t\t[AcademicLevelId] bigint,\n\t\t[AcademicLevel] varchar(40),\n\t\t[AcademicLevel_ES] varchar(40),\n\t\t[TriggerDate] int\n\t\t)\n\t\tWITH (\n\t\tLOCATION = 'raw/AcademicLevel/*/*',\n\t\tDATA_SOURCE = [raw_dlsasa_dfs_core_windows_net],\n\t\tFILE_FORMAT = [SynapseParquetFormat]\n\t\t)\nGO\n\n\nIF EXISTS (SELECT * FROM sys.external_tables WHERE name = 'categories') DROP EXTERNAL TABLE [stg].[categories]\n\tCREATE EXTERNAL TABLE [stg].[categories] (\n\t\t[CategoryCode] varchar(2),\n\t\t[Category] varchar(40),\n\t\t[Category_ES] varchar(40),\n\t\t[Line] int,\n\t\t[TriggerDate] int\n\t\t)\n\t\tWITH (\n\t\tLOCATION = 'raw/Categories/*/*',\n\t\tDATA_SOURCE = [raw_dlsasa_dfs_core_windows_net],\n\t\tFILE_FORMAT = [SynapseParquetFormat]\n\t\t)\nGO\n\nIF EXISTS (SELECT * FROM sys.external_tables WHERE name = 'countries') DROP EXTERNAL TABLE [stg].[countries]\n\tCREATE EXTERNAL TABLE [stg].[countries] (\n\t\t[CountryCode] varchar(4),\n\t\t[latitude] numeric(28,5),\n\t\t[longitude] numeric(28,5),\n\t\t[CountryName] varchar(100),\n\t\t[TriggerDate] int\n\t\t)\n\t\tWITH (\n\t\tLOCATION = 'raw/Countries/*/*',\n\t\tDATA_SOURCE = [raw_dlsasa_dfs_core_windows_net],\n\t\tFILE_FORMAT = [SynapseParquetFormat]\n\t\t)\nGO\n\nIF EXISTS (SELECT * FROM sys.external_tables WHERE name = 'customer') DROP EXTERNAL TABLE [stg].[customer]\n\tCREATE EXTERNAL TABLE [stg].[customer] (\n\t\t[CustomerID] int,\n\t\t[CustomerCode] varchar(20),\n\t\t[Name] varchar(40),\n\t\t[Lastname] varchar(40),\n\t\t[Birthday] date,\n\t\t[MaritalStatus] varchar(1),\n\t\t[Gender] varchar(1),\n\t\t[Email] varchar(40),\n\t\t[AnnualIncome] numeric(18,4),\n\t\t[TotalChildren] int,\n\t\t[ChildrenAtHome] int,\n\t\t[OccupationId] bigint,\n\t\t[AcademicLevelId] bigint,\n\t\t[PostalCode] varchar(20),\n\t\t[Country] varchar(4),\n\t\t[LoadDate] datetime2(7),\n\t\t[TriggerDate] int\n\t\t)\n\t\tWITH (\n\t\tLOCATION = 'raw/Customer/*/*',\n\t\tDATA_SOURCE = [raw_dlsasa_dfs_core_windows_net],\n\t\tFILE_FORMAT = [SynapseParquetFormat]\n\t\t)\nGO\n\nIF EXISTS (SELECT * FROM sys.external_tables WHERE name = 'line') DROP EXTERNAL TABLE [stg].[line]\n\tCREATE EXTERNAL TABLE [stg].[line] (\n\t\t[Codigo] int,\n\t\t[Line] varchar(20),\n\t\t[Line_ES] varchar(20),\n\t\t[TriggerDate] int\n\t\t)\n\t\tWITH (\n\t\tLOCATION = 'raw/Line/*/*',\n\t\tDATA_SOURCE = [raw_dlsasa_dfs_core_windows_net],\n\t\tFILE_FORMAT = [SynapseParquetFormat]\n\t\t)\nGO\n\nIF EXISTS (SELECT * FROM sys.external_tables WHERE name = 'occupation') DROP EXTERNAL TABLE [stg].[occupation]\t\n\tCREATE EXTERNAL TABLE [stg].[occupation] (\n\t\t[OccupationId] bigint,\n\t\t[Occupation] varchar(30),\n\t\t[Occupation_ES] varchar(30),\n\t\t[TriggerDate] int\n\t\t)\n\t\tWITH (\n\t\tLOCATION = 'raw/Occupation/*/*',\n\t\tDATA_SOURCE = [raw_dlsasa_dfs_core_windows_net],\n\t\tFILE_FORMAT = [SynapseParquetFormat]\n\t\t)\nGO\n\nIF EXISTS (SELECT * FROM sys.external_tables WHERE name = 'product') DROP EXTERNAL TABLE [stg].[product]\n\tCREATE EXTERNAL TABLE [stg].[product] (\n\t\t[ProductCode] varchar(10),\n\t\t[ProductName] varchar(40),\n\t\t[Price] numeric(18,4),\n\t\t[LastPurchasePrice] numeric(18,4),\n\t\t[CategoryCode] varchar(2),\n\t\t[PurchaseUnit] varchar(1),\n\t\t[SaleUnit] varchar(1),\n\t\t[RegularSupplier] varchar(6),\n\t\t[Weight] numeric(18,4),\n\t\t[Locked] int,\n\t\t[LastModifiedDate] datetime2(7),\n\t\t[PostingGroup] varchar(10),\n\t\t[VAT_Bus_PostingGr_Price] varchar(10),\n\t\t[VAT_Prod_PostingGroup] varchar(10)\n\t\t)\n\t\tWITH (\n\t\tLOCATION = 'raw/product/*/*',\n\t\tDATA_SOURCE = [raw_dlsasa_dfs_core_windows_net],\n\t\tFILE_FORMAT = [SynapseParquetFormat]\n\t\t)\nGO\n\nIF EXISTS (SELECT * FROM sys.external_tables WHERE name = 'stores') DROP EXTERNAL TABLE [stg].[stores]\n\tCREATE EXTERNAL TABLE [stg].[stores] (\n\t\t[StoreCode] varchar(10),\n\t\t[StoreName] varchar(40),\n\t\t[Latitude] numeric(10,6),\n\t\t[Longitude] numeric(10,6),\n\t\t[sq_ft_surface] int,\n\t\t[SizeGroup] varchar(10),\n\t\t[Employees] int,\n\t\t[RentBase] numeric(18,4),\n\t\t[RentPriceApplyReferenceIndex] bit,\n\t\t[RentYearContract] int,\n\t\t[PostalCode] varchar(20),\n\t\t[Country] varchar(4),\n\t\t[IsDistributedData] bit,\n\t\t[IsActive] bit,\n\t\t[StoreId] int,\n\t\t[TriggerDate] int\n\t\t)\n\t\tWITH (\n\t\tLOCATION = 'raw/Stores/*/*',\n\t\tDATA_SOURCE = [raw_dlsasa_dfs_core_windows_net],\n\t\tFILE_FORMAT = [SynapseParquetFormat]\n\t\t)\nGO\n\n--vIEWs\nIF EXISTS (SELECT * FROM sys.views WHERE name = 'stores') DROP VIEW [etl].[stores]\nGO\nCREATE VIEW [etl].[stores] as \n\tSELECT [StoreCode],\n\t[StoreName],\n\tcountry.[Latitude],\n\tcountry.[Longitude],\n\t[sq_ft_surface],\n\t[SizeGroup],\n\t[Employees],\n\t[RentBase],\n\t[RentPriceApplyReferenceIndex],\n\t[RentYearContract],\n\t[PostalCode],\n\tcountry.CountryName as [Country],\n\t[IsDistributedData], \n\t[IsActive],\n\t[StoreId]\n\tFROM stg.stores store\n\tleft join stg.countries country on country.CountryCode = store.Country\nGO\n\nIF EXISTS (SELECT * FROM sys.views WHERE name = 'customer') DROP VIEW [etl].[customer]\nGO\nCREATE VIEW [etl].[customer] as \n\tSELECT [CustomerID]\n\t,[CustomerCode]\n\t,[Name]\n\t,[Lastname]\n\t,[Birthday]\n\t,[MaritalStatus]\n\t,[Gender]\n\t,[Email]\n\t,[AnnualIncome]\n\t,[TotalChildren]\n\t,[ChildrenAtHome]\n\t,[PostalCode]\n\t,country.CountryName as [Country]\n\t,occ.Occupation\n\t,acc.[AcademicLevel]\n\tFROM [stg].[customer] cust\n\tleft join stg.countries country on country.CountryCode = cust.Country\n\tleft join stg.occupation occ on occ.OccupationId = cust.[OccupationId]\n\tleft join stg.academiclevel acc on acc.AcademicLevelId = cust.[AcademicLevelId]\n\nGO\n\nIF EXISTS (SELECT * FROM sys.views WHERE name = 'product') DROP VIEW [etl].[product]\nGO\nCREATE VIEW [etl].[product] as \n\tSELECT [ProductCode]\n\t,[ProductName]\n\t,[Price]\n\t,[LastPurchasePrice]\n\t,prod.[CategoryCode]\n\t,cat.Category\n\t,line.Line\n\t,[PurchaseUnit]\n\t,[SaleUnit]\n\t,[RegularSupplier]\n\t,[Weight]\n\t,[Locked]\n\t,[PostingGroup]\n\t,[VAT_Bus_PostingGr_Price]\n\t,[VAT_Prod_PostingGroup]\n\tFROM [stg].[product] prod \n\tleft join stg.categories cat on cat.CategoryCode = prod.[CategoryCode]\n\tleft join stg.line line on cat.line = line.codigo\nGO\n\nIF EXISTS (SELECT * FROM sys.views WHERE name = 'sales') DROP VIEW [etl].[sales]\nGO\nCREATE VIEW [etl].[sales] as \n\tSELECT [SaleLineId]\n\t,sales.[SaleId]\n\t,[InvoiceLine]\n\t,[OldTicket]\n\t,[InvoiceCode]\n\t,[Quantity]\n\t,[SalePrice]\n\t,[PurchasePrice]\n\t,[UnitMeasure]\n\t,[Date]\n\t,[StoreCode]\n\t,[CustomerId]\n\t,[ProductCode]\n\tFROM [stg].[saleslines] sales \n\tinner join [stg].[salesheader] headers on headers.SaleId = sales.SaleId \nGO",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"name": "ODstaging",
				"type": "SqlOnDemand"
			}
		},
		"type": "SqlQuery"
	}
}