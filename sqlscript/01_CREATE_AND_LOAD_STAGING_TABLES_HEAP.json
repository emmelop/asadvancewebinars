{
	"name": "01_CREATE_AND_LOAD_STAGING_TABLES_HEAP",
	"properties": {
		"folder": {
			"name": "W02-ASyn4-DataEngineers/Demo 03 Load"
		},
		"content": {
			"query": "--CREATE SCHEMA staging\n----CREATE SCHEMA etl\n--CREATE SCHEMA dim\n--CREATE SCHEMA fact\n\n--DIMENSIONS\n----------------------------------------------------------------------------------------------------------------------\n----------------------------------------------------------------------------------------------------------------------\n----------------------------------------------------------------------------------------------------------------------\n\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE NAME = 'AcademicLevel' AND TYPE = 'U')\nCREATE TABLE staging.AcademicLevel\n\t(\n\t[AcademicLevelId] [bigint] NULL,\n\t[AcademicLevel] [varchar](255) NULL,\n\t[AcademicLevel_ES] [varchar](255) NULL,\n\t[TriggerDate] [int] NULL\n\t)\nWITH\n\t(\n\tDISTRIBUTION = ROUND_ROBIN,\n\t -- CLUSTERED COLUMNSTORE INDEX\n\t  HEAP\n\t)\nGO\n\n--Uncomment the 4 lines below to create a stored procedure for data pipeline orchestration​                 \n--CREATE PROC bulk_load_AcademicLevel\n--AS\n--BEGIN\nCOPY INTO staging.AcademicLevel\n(AcademicLevelId 1, AcademicLevel 2, AcademicLevel_ES 3, TriggerDate 4)\nFROM 'https://dlsasa.dfs.core.windows.net/raw/raw/AcademicLevel/20201211/AcademicLevel.parquet'\nWITH\n(\n\tFILE_TYPE = 'PARQUET'\n\t,MAXERRORS = 0\n\t,IDENTITY_INSERT = 'OFF'\n)\n--END\nGO\n\nSELECT TOP 100 * FROM staging.AcademicLevel\nGO\n\n----------------------------------------------------------------------------------------------------------------------\n----------------------------------------------------------------------------------------------------------------------\n----------------------------------------------------------------------------------------------------------------------\n\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE NAME = 'Categories' AND TYPE = 'U')\nCREATE TABLE staging.Categories\n\t(\n\t[CategoryCode] [nvarchar](30) NULL,\n\t[Category] [nvarchar](30) NULL,\n\t[Category_ES] [nvarchar](30) NULL,\n\t[Line] [int] NULL,\n\t[TriggerDate] [int] NULL\n\t)\nWITH\n\t(\n\tDISTRIBUTION = ROUND_ROBIN,\n\t CLUSTERED COLUMNSTORE INDEX\n\t -- HEAP\n\t)\nGO\n\n--Uncomment the 4 lines below to create a stored procedure for data pipeline orchestration​                 \n--CREATE PROC bulk_load_Categories\n--AS\n--BEGIN\nCOPY INTO staging.Categories\n(CategoryCode 1, Category 2, Category_ES 3, Line 4, TriggerDate 5)\nFROM 'https://dlsasa.dfs.core.windows.net/raw/raw/Categories/20201211/Categories.parquet'\nWITH\n(\n\tFILE_TYPE = 'PARQUET'\n\t,MAXERRORS = 0\n\t,IDENTITY_INSERT = 'OFF'\n)\n--END\nGO\n\nSELECT TOP 100 * FROM staging.Categories\nGO\n\n----------------------------------------------------------------------------------------------------------------------\n----------------------------------------------------------------------------------------------------------------------\n----------------------------------------------------------------------------------------------------------------------\n\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE NAME = 'Countries' AND TYPE = 'U')\nCREATE TABLE staging.Countries\n\t(\n\t[CountryCode] [varchar](3) NULL,\n\t[latitude] [numeric](28, 5) NULL,\n\t[longitude] [numeric](28, 5) NULL,\n\t[CountryName] [varchar](255) NULL,\n\t[TriggerDate] [int] NULL\n\t)\nWITH\n\t(\n\tDISTRIBUTION = ROUND_ROBIN,\n\t CLUSTERED COLUMNSTORE INDEX\n\t -- HEAP\n\t)\nGO\n\n--Uncomment the 4 lines below to create a stored procedure for data pipeline orchestration​                 \n--CREATE PROC bulk_load_Countries\n--AS\n--BEGIN\nCOPY INTO staging.Countries\n(CountryCode 1, latitude 2, longitude 3, CountryName 4, TriggerDate 5)\nFROM 'https://dlsasa.dfs.core.windows.net/raw/raw/Countries/20201211/Countries.parquet'\nWITH\n(\n\tFILE_TYPE = 'PARQUET'\n\t,MAXERRORS = 0\n\t,IDENTITY_INSERT = 'OFF'\n)\n--END\nGO\n\nSELECT TOP 100 * FROM staging.Countries\nGO\n\n----------------------------------------------------------------------------------------------------------------------\n----------------------------------------------------------------------------------------------------------------------\n----------------------------------------------------------------------------------------------------------------------\n\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE NAME = 'Customer' AND TYPE = 'U')\nCREATE TABLE staging.Customer\n\t(\n\t[CustomerID] [int] NULL,\n\t[CustomerCode] [varchar](255) NULL,\n\t[Name] [varchar](50) NULL,\n\t[Lastname] [varchar](50) NULL,\n\t[Birthday] [date] NULL,\n\t[MaritalStatus] [varchar](1) NULL,\n\t[Gender] [varchar](50) NULL,\n\t[Email] [varchar](255) NULL,\n\t[AnnualIncome] [numeric](19, 4) NULL,\n\t[TotalChildren] [int] NULL,\n\t[ChildrenAtHome] [int] NULL,\n\t[OccupationId] [bigint] NULL,\n\t[AcademicLevelId] [bigint] NULL,\n\t[PostalCode] [varchar](50) NULL,\n\t[Country] [varchar](3) NULL,\n\t[LoadDate] [datetime2](7) NULL,\n\t[TriggerDate] [int] NULL\n\t)\nWITH\n\t(\n\tDISTRIBUTION = ROUND_ROBIN,\n\t CLUSTERED COLUMNSTORE INDEX\n\t -- HEAP\n\t)\nGO\n\n--Uncomment the 4 lines below to create a stored procedure for data pipeline orchestration​                 \n--CREATE PROC bulk_load_Customer\n--AS\n--BEGIN\nCOPY INTO staging.Customer\n(CustomerID 1, CustomerCode 2, Name 3, Lastname 4, Birthday 5, MaritalStatus 6, Gender 7, Email 8, AnnualIncome 9, TotalChildren 10, ChildrenAtHome 11, OccupationId 12, AcademicLevelId 13, PostalCode 14, Country 15, LoadDate 16, TriggerDate 17)\nFROM 'https://dlsasa.dfs.core.windows.net/raw/raw/Customer/20201211/Customer.parquet'\nWITH\n(\n\tFILE_TYPE = 'PARQUET'\n\t,MAXERRORS = 0\n\t,IDENTITY_INSERT = 'OFF'\n)\n--END\nGO\n\nSELECT TOP 100 * FROM staging.Customer\nGO\n\n----------------------------------------------------------------------------------------------------------------------\n----------------------------------------------------------------------------------------------------------------------\n----------------------------------------------------------------------------------------------------------------------\n\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE NAME = 'Line' AND TYPE = 'U')\nCREATE TABLE staging.Line\n\t(\n\t[Codigo] [int] NULL,\n\t[Line] [nvarchar](30) NULL,\n\t[Line_ES] [nvarchar](30) NULL,\n\t[TriggerDate] [int] NULL\n\t)\nWITH\n\t(\n\tDISTRIBUTION = ROUND_ROBIN,\n\t CLUSTERED COLUMNSTORE INDEX\n\t -- HEAP\n\t)\nGO\n\n--Uncomment the 4 lines below to create a stored procedure for data pipeline orchestration​                 \n--CREATE PROC bulk_load_Line\n--AS\n--BEGIN\nCOPY INTO staging.Line\n(Codigo 1, Line 2, Line_ES 3, TriggerDate 4)\nFROM 'https://dlsasa.dfs.core.windows.net/raw/raw/Line/20201211/Line.parquet'\nWITH\n(\n\tFILE_TYPE = 'PARQUET'\n\t,MAXERRORS = 0\n\t,IDENTITY_INSERT = 'OFF'\n)\n--END\nGO\n\nSELECT TOP 100 * FROM staging.Line\nGO\n\n----------------------------------------------------------------------------------------------------------------------\n----------------------------------------------------------------------------------------------------------------------\n----------------------------------------------------------------------------------------------------------------------\n\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE NAME = 'Occupation' AND TYPE = 'U')\nCREATE TABLE staging.Occupation\n\t(\n\t[OccupationId] [bigint] NULL,\n\t[Occupation] [nvarchar](30) NULL,\n\t[Occupation_ES] [nvarchar](30) NULL,\n\t[TriggerDate] [int] NULL\n\t)\nWITH\n\t(\n\tDISTRIBUTION = ROUND_ROBIN,\n\t CLUSTERED COLUMNSTORE INDEX\n\t -- HEAP\n\t)\nGO\n\n--Uncomment the 4 lines below to create a stored procedure for data pipeline orchestration​                 \n--CREATE PROC bulk_load_Occupation\n--AS\n--BEGIN\nCOPY INTO staging.Occupation\n(OccupationId 1, Occupation 2, Occupation_ES 3, TriggerDate 4)\nFROM 'https://dlsasa.dfs.core.windows.net/raw/raw/Occupation/20201211/Occupation.parquet'\nWITH\n(\n\tFILE_TYPE = 'PARQUET'\n\t,MAXERRORS = 0\n\t,IDENTITY_INSERT = 'OFF'\n)\n--END\nGO\n\nSELECT TOP 100 * FROM staging.Occupation\nGO\n\n----------------------------------------------------------------------------------------------------------------------\n----------------------------------------------------------------------------------------------------------------------\n----------------------------------------------------------------------------------------------------------------------\n\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE NAME = 'Product' AND TYPE = 'U')\nCREATE TABLE staging.Product\n\t(\n\t[ProductCode] [varchar](32) NULL,\n\t[ProductName] [varchar](33) NULL,\n\t[Price] [numeric](38, 20) NULL,\n\t[LastPurchasePrice] [numeric](38, 20) NULL,\n\t[CategoryCode] [varchar](30) NULL,\n\t[PurchaseUnit] [varchar](30) NULL,\n\t[SaleUnit] [varchar](30) NULL,\n\t[RegularSupplier] [varchar](30) NULL,\n\t[Weight] [numeric](38, 20) NULL,\n\t[Locked] [int] NULL,\n\t[LastModifiedDate] [datetime2](7) NULL,\n\t[PostingGroup] [varchar](8000) NULL,\n\t[VAT_Bus_PostingGr_Price] [varchar](30) NULL,\n\t[VAT_Prod_PostingGroup] [varchar](30) NULL\n\t)\nWITH\n\t(\n\tDISTRIBUTION = ROUND_ROBIN,\n\t CLUSTERED COLUMNSTORE INDEX\n\t -- HEAP\n\t)\nGO\n\n--Uncomment the 4 lines below to create a stored procedure for data pipeline orchestration​                 \n--CREATE PROC bulk_load_Product\n--AS\n--BEGIN\nCOPY INTO staging.Product\n(ProductCode 1, ProductName 2, Price 3, LastPurchasePrice 4, CategoryCode 5, PurchaseUnit 6, SaleUnit 7, RegularSupplier 8, Weight 9, Locked 10, LastModifiedDate 11, PostingGroup 12, VAT_Bus_PostingGr_Price 13, VAT_Prod_PostingGroup 14)\nFROM 'https://dlsasa.dfs.core.windows.net/raw/raw/product/20201211/product.parquet'\nWITH\n(\n\tFILE_TYPE = 'PARQUET'\n\t,MAXERRORS = 0\n\t,IDENTITY_INSERT = 'OFF'\n)\n--END\nGO\n\nSELECT TOP 100 * FROM staging.Product\nGO\n\n----------------------------------------------------------------------------------------------------------------------\n----------------------------------------------------------------------------------------------------------------------\n----------------------------------------------------------------------------------------------------------------------\n\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE NAME = 'Stores' AND TYPE = 'U')\nCREATE TABLE staging.Stores\n\t(\n\t[StoreCode] [varchar](255) NULL,\n\t[StoreName] [varchar](255) NULL,\n\t[Latitude] [numeric](10, 6) NULL,\n\t[Longitude] [numeric](10, 6) NULL,\n\t[sq_ft_surface] [int] NULL,\n\t[SizeGroup] [varchar](255) NULL,\n\t[Employees] [int] NULL,\n\t[RentBase] [numeric](19, 4) NULL,\n\t[RentPriceApplyReferenceIndex] [bit] NULL,\n\t[RentYearContract] [int] NULL,\n\t[PostalCode] [varchar](255) NULL,\n\t[Country] [varchar](255) NULL,\n\t[IsDistributedData] [bit] NULL,\n\t[IsActive] [bit] NULL,\n\t[StoreId] [int] NULL,\n\t[TriggerDate] [int] NULL\n\t)\nWITH\n\t(\n\tDISTRIBUTION = ROUND_ROBIN,\n\t CLUSTERED COLUMNSTORE INDEX\n\t -- HEAP\n\t)\nGO\n\n--Uncomment the 4 lines below to create a stored procedure for data pipeline orchestration​                 \n--CREATE PROC bulk_load_Stores\n--AS\n--BEGIN\nCOPY INTO staging.Stores\n(StoreCode 1, StoreName 2, Latitude 3, Longitude 4, sq_ft_surface 5, SizeGroup 6, Employees 7, RentBase 8, RentPriceApplyReferenceIndex 9, RentYearContract 10, PostalCode 11, Country 12, IsDistributedData 13, IsActive 14, StoreId 15, TriggerDate 16)\nFROM 'https://dlsasa.dfs.core.windows.net/raw/raw/Stores/20201211/Stores.parquet'\nWITH\n(\n\tFILE_TYPE = 'PARQUET'\n\t,MAXERRORS = 0\n\t,IDENTITY_INSERT = 'OFF'\n)\n--END\nGO\n\nSELECT TOP 100 * FROM staging.Stores\nGO",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"poolName": "sqldw",
				"databaseName": "sqldw"
			}
		},
		"type": "SqlQuery"
	}
}